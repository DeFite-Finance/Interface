{"version":3,"sources":["components/Wallet/address.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Wallet/chainId.tsx","components/Wallet/index.tsx"],"names":["WalletAddress","account","useWeb3React","substring","length","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","unsupportedIterableToArray","TypeError","ConnectChainId","chainId","BlockNumber","library","React","useState","blockNumber","setBlockNumber","useEffect","stale","getBlockNumber","then","catch","NaN","updateBlockNumber","on","removeListener","role","Balance","balance","setBalance","getBalance","WalletInfo","active","error","style","margin","textAlign","display","gridGap","gridTemplateColumns","maxWidth","lineHeight"],"mappings":"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","file":"static/js/12.90ec9add.chunk.js","sourcesContent":["import { useWeb3React } from '@web3-react/core';\n\nconst WalletAddress = () => {\n    const { account } = useWeb3React();\n\n    return account ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}` : '';\n};\n\nexport default WalletAddress;\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useWeb3React } from '@web3-react/core';\n\nconst ConnectChainId = () => {\n    const { chainId } = useWeb3React();\n\n    return chainId ?? '';\n};\n\nexport default ConnectChainId;\n","import React from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport WalletAddress from './address';\nimport ConnectChainId from './chainId';\n\nconst BlockNumber = () => {\n    const { chainId, library } = useWeb3React();\n\n    const [blockNumber, setBlockNumber] = React.useState<number>();\n    React.useEffect((): any => {\n        if (library) {\n            let stale = false;\n\n            library\n                .getBlockNumber()\n                .then(() => {\n                    if (!stale) {\n                        setBlockNumber(blockNumber);\n                    }\n                })\n                .catch(() => {\n                    if (!stale) {\n                        setBlockNumber(NaN);\n                    }\n                });\n\n            const updateBlockNumber = () => {\n                setBlockNumber(blockNumber);\n            };\n            library.on('block', updateBlockNumber);\n\n            return () => {\n                stale = true;\n                library.removeListener('block', updateBlockNumber);\n                setBlockNumber(undefined);\n            };\n        }\n    }, [library, chainId, blockNumber]); // ensures refresh if referential identity of library doesn\"t change across chainIds\n\n    return (\n        <>\n            <span>Block Number</span>\n            <span role=\"img\" aria-label=\"numbers\">\n                ðŸ”¢\n            </span>\n            <span>{blockNumber === null ? 'Error' : blockNumber ?? ''}</span>\n        </>\n    );\n};\n\nfunction Balance() {\n    const { account, library, chainId } = useWeb3React();\n\n    const [balance, setBalance] = React.useState<number>();\n    React.useEffect((): any => {\n        if (!!account && !!library) {\n            let stale = false;\n\n            library\n                .getBalance(account)\n                .then(() => {\n                    if (!stale) {\n                        setBalance(balance);\n                    }\n                })\n                .catch(() => {\n                    if (!stale) {\n                        setBalance(NaN);\n                    }\n                });\n\n            return () => {\n                stale = true;\n                setBalance(undefined);\n            };\n        }\n    }, [account, library, chainId, balance]); // ensures refresh if referential identity of library doesn\"t change across chainIds\n\n    return (\n        <>\n            <span>Balance</span>\n            <span role=\"img\" aria-label=\"gold\">\n                ðŸ’°\n            </span>\n            <span>{balance === null ? 'Error' : balance ? `Îž${balance}` : ''}</span>\n        </>\n    );\n}\n\nconst WalletInfo = () => {\n    const { active, error } = useWeb3React();\n\n    return (\n        <>\n            <h1 style={{ margin: '1rem', textAlign: 'right' }}>{active ? 'ðŸŸ¢' : error ? 'ðŸ”´' : 'ðŸŸ '}</h1>\n            <h3\n                style={{\n                    display: 'grid',\n                    gridGap: '1rem',\n                    gridTemplateColumns: '1fr min-content 1fr',\n                    maxWidth: '20rem',\n                    lineHeight: '2rem',\n                    margin: 'auto',\n                }}\n            >\n                <>\n                    <span>Chain Id</span>\n                    <span role=\"img\" aria-label=\"chain\">\n                        â›“\n                    </span>\n                    <span>{ConnectChainId() ?? ''}</span>\n                </>\n\n                <BlockNumber />\n\n                <>\n                    <span>Account</span>\n                    <span role=\"img\" aria-label=\"robot\">\n                        ðŸ¤–\n                    </span>\n                    <span>{WalletAddress()}</span>\n                </>\n\n                <Balance />\n            </h3>\n        </>\n    );\n};\n\nexport default WalletInfo;\n"],"sourceRoot":""}