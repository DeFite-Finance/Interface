{"version":3,"sources":["redux/modalShowSlice.tsx","redux/modalExpand.tsx","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Col.js","components/WalletModal/WalletCard.tsx","components/WalletModal/icon.tsx","assets/connectors/metamask-icon.svg","assets/connectors/trustwallet-icon.svg","assets/connectors/mathwallet-icon.svg","assets/connectors/tokenpocket-icon.svg","assets/connectors/walletconnect-icon.svg","assets/connectors/binancewallet-icon.svg","assets/utils/more-icon.svg","components/WalletModal/metaInfo.tsx","components/WalletModal/index.tsx"],"names":["modalShowSlice","createSlice","name","initialState","show","reducers","changeState","state","actions","modalShowExpand","expand","setExpand","action","payload","size","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","createWithBsPrefix","ModalDialog","React","ref","bsPrefix","className","contentClassName","centered","fullscreen","children","scrollable","props","useBootstrapPrefix","dialogClass","fullScreenClass","_jsx","classNames","displayName","ModalHeader","AbstractModalHeader","defaultProps","closeLabel","closeButton","DivStyledAsH4","divWithClassName","Component","backdrop","keyboard","autoFocus","enforceFocus","restoreFocus","animation","dialogAs","DialogTransition","Fade","timeout","BackdropTransition","Modal","dialogClassName","Dialog","ariaLabelledby","onEscapeKeyDown","onShow","onHide","container","restoreFocusOptions","onEntered","onExit","onExiting","onEnter","onEntering","onExited","backdropClassName","propsManager","manager","useState","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","modal","setModalRef","mergedRef","useMergedRefs","handleHide","useEventCallback","isRTL","useIsRTL","modalContext","useMemo","getModalManager","getSharedManager","updateDialogStyle","node","containerIsOverflowing","getScrollbarWidth","modalIsOverflowing","scrollHeight","ownerDocument","documentElement","clientHeight","paddingRight","getScrollbarSize","undefined","paddingLeft","handleWindowResize","dialog","removeEventListener","window","handleDialogMouseDown","handleMouseUp","e","target","handleStaticModalAnimation","transitionEnd","handleClick","currentTarget","handleStaticBackdropClick","renderBackdrop","useCallback","backdropProps","baseModalStyle","display","ModalContext","Provider","BaseModal","preventDefault","isAppearing","addEventListener","transition","backdropTransition","renderDialog","dialogProps","role","onClick","onMouseUp","onMouseDown","Object","assign","Body","ModalBody","Header","Title","ModalTitle","Footer","ModalFooter","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","DEVICE_SIZES","Row","as","decoratedBsPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","Col","spans","span","offset","order","useCol","colProps","length","WalletCard","walletMetaInfo","disabled","title","icon","connectorId","login","useAuth","Button","localStorage","setItem","variant","color","Icon","src","config","Metamask","ConnectorNames","Injected","TrustWallet","MathWallet","TokenPocket","WalletConnect","BinanceWallet","BSC","moreIcon","MoreIcon","WalletModal","useWeb3React","connector","activate","error","useAppSelector","modalShow","triedEager","tried","modalExpand","dispatch","useAppDispatch","currentConnector","metaInfo","map","entry","connectorsByName","Container"],"mappings":"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","file":"static/js/14.456d40ce.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const modalShowSlice = createSlice({\n    name: 'modalShow',\n    initialState: {\n        show: false,\n    },\n    reducers: {\n        changeState: (state) => {\n            state.show = state.show ? false : true;\n        },\n    },\n});\n\n// Action creators are generated for each case reducer function\nexport const { changeState } = modalShowSlice.actions;\n\nexport default modalShowSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport const modalShowExpand = createSlice({\n    name: 'modalExpand',\n    initialState: {\n        expand: false,\n    },\n    reducers: {\n        setExpand: (state, action: PayloadAction<boolean>) => {\n            state.expand = action.payload;\n        },\n    },\n});\n\n// Action creators are generated for each case reducer function\nexport const { setExpand } = modalShowExpand.actions;\n\nexport default modalShowExpand.reducer;\n","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", { ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  closeLabel: 'Close',\n  closeButton: false\n};\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix)\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nModalHeader.defaultProps = defaultProps;\nexport default ModalHeader;","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  show: false,\n  backdrop: true,\n  keyboard: true,\n  autoFocus: true,\n  enforceFocus: true,\n  restoreFocus: true,\n  animation: true,\n  dialogAs: ModalDialog\n};\n/* eslint-disable no-use-before-define, react/no-multi-comp */\n\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, { ...props,\n    timeout: null\n  });\n}\n/* eslint-enable no-use-before-define */\n\n\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog,\n  'aria-labelledby': ariaLabelledby,\n\n  /* BaseModal props */\n  show,\n  animation,\n  backdrop,\n  keyboard,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus,\n  enforceFocus,\n  restoreFocus,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  }); // We prevent the modal from closing during a drag by detecting where the\n  // the click originates from. If it starts in the modal and then ends outside\n  // don't close.\n\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n\n    waitingForMouseUpRef.current = false;\n  };\n\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    handleStaticModalAnimation();\n  };\n\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n\n    onHide == null ? void 0 : onHide();\n  };\n\n  const handleEscapeKeyDown = e => {\n    if (!keyboard && backdrop === 'static') {\n      // Call preventDefault to stop modal from closing in restart ui,\n      // then play our animation.\n      e.preventDefault();\n      handleStaticModalAnimation();\n    } else if (keyboard && onEscapeKeyDown) {\n      onEscapeKeyDown(e);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      node.style.display = 'block';\n      updateDialogStyle(node);\n    }\n\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing); // FIXME: This should work even when animation is disabled.\n\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n\n    onExited == null ? void 0 : onExited(node); // FIXME: This should work even when animation is disabled.\n\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", { ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = { ...style,\n    ...modalStyle\n  }; // Sets `display` always block when `animation` is false\n\n  if (!animation) {\n    baseModalStyle.display = 'block';\n  }\n\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-labelledby\": ariaLabelledby,\n    children: /*#__PURE__*/_jsx(Dialog, { ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nModal.defaultProps = defaultProps;\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import React from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\n\nimport useAuth from '../../hooks/useAuth';\n\nconst WalletCard = ({ walletMetaInfo, disabled }: any) => {\n    const { title, icon, connectorId } = walletMetaInfo;\n    const { login } = useAuth();\n    return (\n        <div className=\"row mt-2\">\n            <div className=\"d-grid gap-2\">\n                <Button\n                    disabled={disabled}\n                    onClick={() => {\n                        login(connectorId);\n                        localStorage.setItem('Wallet', connectorId);\n                    }}\n                    size=\"lg\"\n                    variant=\"outline-light\"\n                    style={{ color: 'black' }}\n                >\n                    {' '}\n                    <Row className=\"justify-content-center\">{icon}</Row>\n                    <Row className=\"justify-content-center\">{title}</Row>\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default WalletCard;\n","import React from 'react';\n\nconst Icon = (icon: string) => {\n    return (\n        <>\n            <img src={icon} style={{ width: '40%' }} />\n        </>\n    );\n};\n\nexport default Icon;\n","export default __webpack_public_path__ + \"static/media/metamask-icon.45038d58.svg\";","export default __webpack_public_path__ + \"static/media/trustwallet-icon.9b47583f.svg\";","export default __webpack_public_path__ + \"static/media/mathwallet-icon.19212234.svg\";","export default __webpack_public_path__ + \"static/media/tokenpocket-icon.be44e737.svg\";","export default __webpack_public_path__ + \"static/media/walletconnect-icon.96434e49.svg\";","export default __webpack_public_path__ + \"static/media/binancewallet-icon.ea1c9739.svg\";","export default __webpack_public_path__ + \"static/media/more-icon.0634ac41.svg\";","import Icon from './icon';\nimport Metamask from '../../assets/connectors/metamask-icon.svg';\nimport TrustWallet from '../../assets/connectors/trustwallet-icon.svg';\nimport MathWallet from '../../assets/connectors/mathwallet-icon.svg';\nimport TokenPocket from '../../assets/connectors/tokenpocket-icon.svg';\nimport WalletConnect from '../../assets/connectors/walletconnect-icon.svg';\nimport BinanceWallet from '../../assets/connectors/binancewallet-icon.svg';\nimport MoreIcon from '../../assets/utils/more-icon.svg';\n\nimport { ConnectorNames } from '../../utils/connectorNames';\n\nexport interface Config {\n    title: string;\n    icon: React.ReactNode;\n    connectorId: ConnectorNames;\n}\n\nconst config: Config[] = [\n    {\n        title: 'Metamask',\n        icon: Icon(Metamask),\n        connectorId: ConnectorNames.Injected,\n    },\n    {\n        title: 'TrustWallet',\n        icon: Icon(TrustWallet),\n        connectorId: ConnectorNames.Injected,\n    },\n    {\n        title: 'MathWallet',\n        icon: Icon(MathWallet),\n        connectorId: ConnectorNames.Injected,\n    },\n    {\n        title: 'TokenPocket',\n        icon: Icon(TokenPocket),\n        connectorId: ConnectorNames.Injected,\n    },\n    {\n        title: 'WalletConnect',\n        icon: Icon(WalletConnect),\n        connectorId: ConnectorNames.WalletConnect,\n    },\n    {\n        title: 'Binance-Chain',\n        icon: Icon(BinanceWallet),\n        connectorId: ConnectorNames.BSC,\n    },\n];\n\nexport const moreIcon = {\n    title: 'More Icon',\n    icon: Icon(MoreIcon),\n};\n\nexport default config;\n","import React from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport { useAppSelector, useAppDispatch } from '../../redux/hook';\nimport { changeState } from '../../redux/modalShowSlice';\nimport { setExpand } from '../../redux/modalExpand';\n\nimport { connectorsByName } from '../../utils/connectors';\nimport WalletCard from './WalletCard';\nimport metaInfo, { Config, moreIcon } from './metaInfo';\n\nconst WalletModal = () => {\n    const { connector, activate, error } = useWeb3React();\n\n    const show = useAppSelector((state) => state.modalShow.show);\n    const triedEager = useAppSelector((state) => state.triedEager.tried);\n    const expand = useAppSelector((state) => state.modalExpand.expand);\n    const dispatch = useAppDispatch();\n\n    const currentConnector = metaInfo.map((entry: Config) => connectorsByName[entry.connectorId]);\n\n    return (\n        <>\n            <Modal\n                show={show}\n                onHide={() => dispatch(changeState())}\n                onExited={() => dispatch(setExpand(false))}\n                centered\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Wallet Connection</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    <Container className=\"justify-content-md-center\">\n                        <Row>\n                            <Col>\n                                <div key={metaInfo[0].title} onClick={() => dispatch(changeState())}>\n                                    <WalletCard\n                                        walletMetaInfo={metaInfo[0]}\n                                        activate={activate}\n                                        currentConnector={currentConnector[0]}\n                                        disabled={triedEager || error || currentConnector[0] === connector}\n                                    />\n                                </div>\n                            </Col>\n                            <Col>\n                                <div key={metaInfo[1].title} onClick={() => dispatch(changeState())}>\n                                    <WalletCard\n                                        walletMetaInfo={metaInfo[1]}\n                                        activate={activate}\n                                        currentConnector={currentConnector[1]}\n                                        disabled={triedEager || error || currentConnector[1] === connector}\n                                    />\n                                </div>\n                            </Col>\n                        </Row>\n                        <Row className=\"justify-content-md-center\">\n                            <Col>\n                                <div key={metaInfo[2].title} onClick={() => dispatch(changeState())}>\n                                    <WalletCard\n                                        walletMetaInfo={metaInfo[2]}\n                                        activate={activate}\n                                        currentConnector={currentConnector[2]}\n                                        disabled={triedEager || error || currentConnector[2] === connector}\n                                    />\n                                </div>\n                            </Col>\n                            <Col>\n                                {expand && (\n                                    <div\n                                        key={metaInfo[3].title}\n                                        onClick={() => dispatch(changeState())}\n                                        // style={{ display: expand ? 'block' : 'none' }}\n                                    >\n                                        <WalletCard\n                                            walletMetaInfo={metaInfo[3]}\n                                            activate={activate}\n                                            currentConnector={currentConnector[3]}\n                                            disabled={triedEager || error || currentConnector[3] === connector}\n                                        />\n                                    </div>\n                                )}\n                                {!expand && (\n                                    <div\n                                        className=\"row mt-2 justify-content-center\"\n                                        onClick={() => dispatch(setExpand(true))}\n                                        // style={{ display: !expand ? 'block' : 'none' }}\n                                    >\n                                        <div className=\"d-grid gap-2\">\n                                            <Button variant=\"outline-light\" style={{ color: 'black' }}>\n                                                <Row className=\"justify-content-center\">{moreIcon.icon}</Row>\n                                                <Row className=\"justify-content-center\">{moreIcon.title}</Row>\n                                            </Button>\n                                        </div>\n                                    </div>\n                                )}\n                            </Col>\n                        </Row>\n                        {expand && (\n                            <Row className=\"justify-content-md-center\">\n                                <Col>\n                                    <div key={metaInfo[4].title} onClick={() => dispatch(changeState())}>\n                                        <WalletCard\n                                            walletMetaInfo={metaInfo[4]}\n                                            activate={activate}\n                                            currentConnector={currentConnector[4]}\n                                            disabled={triedEager || error || currentConnector[4] === connector}\n                                        />\n                                    </div>\n                                </Col>\n                                <Col>\n                                    <div key={metaInfo[5].title} onClick={() => dispatch(changeState())}>\n                                        <WalletCard\n                                            walletMetaInfo={metaInfo[5]}\n                                            activate={activate}\n                                            currentConnector={currentConnector[5]}\n                                            disabled={triedEager || error || currentConnector[5] === connector}\n                                        />\n                                    </div>\n                                </Col>\n                            </Row>\n                        )}\n                    </Container>\n                </Modal.Body>\n                <Modal.Footer className=\"justify-content-md-center\">\n                    <Button>How to connect?</Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nexport default WalletModal;\n"],"sourceRoot":""}