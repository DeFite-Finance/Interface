{"version":3,"sources":["redux/modalShowSlice.tsx","utils/getEthErrorMessage.tsx","components/Wallet/address.tsx","components/ConnectButton/index.tsx","assets/iris_banner_light.svg","components/Header/index.tsx"],"names":["modalShowSlice","createSlice","name","initialState","show","reducers","changeState","state","actions","getErrorMessage","error","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","console","WalletAddress","account","useWeb3React","substring","length","ConnectButton","active","logout","useAuth","dispatch","useAppDispatch","address","style","display","gridGap","gridTemplateColumns","maxWidth","margin","Dropdown","Toggle","variant","id","Menu","Item","Divider","onClick","Button","marginTop","marginBottom","Header","Navbar","sticky","expand","Container","className","fluid","Brand","href","marginLeft","src","iris_banner","width","height","alt","Collapse","Nav","Link","color"],"mappings":"+IAAA,+CAEaA,EAAiBC,YAAY,CACtCC,KAAM,YACNC,aAAc,CACVC,MAAM,GAEVC,SAAU,CACNC,YAAa,SAACC,GACVA,EAAMH,MAAOG,EAAMH,SAMhBE,EAAgBN,EAAeQ,QAA/BF,YAEAN,MAAf,S,2JCXMS,EAAkB,SAACC,GACrB,OAAIA,aAAiBC,IACV,8GAEPD,aAAiBE,IACV,+CAEPF,aAAiBG,IACV,kEAGXC,QAAQJ,MAAMA,GACP,mE,SCVIK,EANO,WAClB,IAAQC,EAAYC,cAAZD,QAER,OAAOA,EAAO,UAAMA,EAAQE,UAAU,EAAG,GAA3B,cAAmCF,EAAQE,UAAUF,EAAQG,OAAS,IAAO,I,kCC0DhFC,EAlDO,WAClB,MAA0BH,cAAlBI,EAAR,EAAQA,OAAQX,EAAhB,EAAgBA,MAERY,EAAWC,cAAXD,OACFE,EAAWC,cAEXC,EAAUX,IAEhB,OACI,qCACI,sBACIY,MAAO,CACHC,QAAS,OACTC,QAAS,MACTC,oBAAqB,cACrBC,SAAU,OACVC,OAAQ,QANhB,UASKX,GACG,eAACY,EAAA,EAAD,WACI,cAACA,EAAA,EAASC,OAAV,CAAiBC,QAAQ,OAAOC,GAAG,iBAAnC,SACKV,IAGL,eAACO,EAAA,EAASI,KAAV,WACI,cAACJ,EAAA,EAASK,KAAV,qBACA,cAACL,EAAA,EAASK,KAAV,2BACA,cAACL,EAAA,EAASM,QAAV,IACA,cAACN,EAAA,EAASK,KAAV,CAAeE,QAASlB,EAAxB,+BAIVD,IAAWX,GACT,cAAC+B,EAAA,EAAD,CACIN,QAAQ,OACRK,QAAS,WACLhB,EAASlB,gBAHjB,iCAWLI,GAAS,oBAAIiB,MAAO,CAAEe,UAAW,OAAQC,aAAc,KAA9C,SAAsDlC,EAAgBC,SC1D/E,G,OAAA,IAA0B,+CC0D1BkC,UAjDA,WACX,OACI,mCACI,cAACC,EAAA,EAAD,CAAQT,GAAG,MAAMU,OAAO,MAAMC,OAAO,KAAKZ,QAAQ,OAAlD,SACI,eAACa,EAAA,EAAD,CAAWC,UAAU,YAAYC,OAAK,EAAtC,UACI,cAACL,EAAA,EAAOM,MAAR,CAAcC,KAAK,IAAIzB,MAAO,CAAE0B,WAAY,MAA5C,SACI,qBAAKC,IAAKC,EAAaC,MAAM,KAAKC,OAAO,KAAKC,IAAI,mBAEtD,cAACb,EAAA,EAAOX,OAAR,CAAe,gBAAc,0BAC7B,eAACW,EAAA,EAAOc,SAAR,CAAiBvB,GAAG,wBAApB,UACI,eAACwB,EAAA,EAAD,CAAKX,UAAU,UAAf,UACI,cAACW,EAAA,EAAItB,KAAL,CAAUX,MAAO,CAAE0B,WAAY,MAA/B,SACI,cAACO,EAAA,EAAIC,KAAL,CAAUlC,MAAO,CAAEmC,MAAO,sBAAwBV,KAAK,QAAvD,oBAIJ,cAACQ,EAAA,EAAItB,KAAL,CAAUX,MAAO,CAAE0B,WAAY,MAA/B,SACI,cAACO,EAAA,EAAIC,KAAL,CAAUlC,MAAO,CAAEmC,MAAO,sBAAwBV,KAAK,SAAvD,qBAIJ,cAACQ,EAAA,EAAItB,KAAL,CAAUX,MAAO,CAAE0B,WAAY,MAA/B,SACI,cAACO,EAAA,EAAIC,KAAL,CAAUlC,MAAO,CAAEmC,MAAO,sBAAwBV,KAAK,WAAvD,uBAIJ,cAACQ,EAAA,EAAItB,KAAL,CAAUX,MAAO,CAAE0B,WAAY,MAA/B,SACI,cAACO,EAAA,EAAIC,KAAL,CAAUlC,MAAO,CAAEmC,MAAO,sBAAwBV,KAAK,QAAvD,oBAIJ,cAACQ,EAAA,EAAItB,KAAL,CAAUX,MAAO,CAAE0B,WAAY,MAA/B,SACI,cAACO,EAAA,EAAIC,KAAL,CAAUlC,MAAO,CAAEmC,MAAO,sBAAwBV,KAAK,WAAvD,0BAKR,cAACQ,EAAA,EAAD,UACI,cAACA,EAAA,EAAItB,KAAL,UACI,cAAC,EAAD","file":"static/js/14.98f57e8b.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const modalShowSlice = createSlice({\n    name: 'modalShow',\n    initialState: {\n        show: false,\n    },\n    reducers: {\n        changeState: (state) => {\n            state.show = state.show ? false : true;\n        },\n    },\n});\n\n// Action creators are generated for each case reducer function\nexport const { changeState } = modalShowSlice.actions;\n\nexport default modalShowSlice.reducer;\n","import {\n    NoEthereumProviderError,\n    UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector';\nimport { UnsupportedChainIdError } from '@web3-react/core';\n\nconst getErrorMessage = (error: Error) => {\n    if (error instanceof NoEthereumProviderError) {\n        return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.';\n    }\n    if (error instanceof UnsupportedChainIdError) {\n        return 'You are connected to an unsupported network.';\n    }\n    if (error instanceof UserRejectedRequestErrorInjected) {\n        return 'Please authorize this website to access your Ethereum account.';\n    }\n\n    console.error(error);\n    return 'An unknown error occurred. Check the console for more details.';\n};\n\nexport { getErrorMessage };\n","import { useWeb3React } from '@web3-react/core';\n\nconst WalletAddress = () => {\n    const { account } = useWeb3React();\n\n    return account ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}` : '';\n};\n\nexport default WalletAddress;\n","import React from 'react';\nimport { useWeb3React } from '@web3-react/core';\n\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nimport { getErrorMessage } from '../../utils/getEthErrorMessage';\nimport useAuth from '../../hooks/useAuth';\nimport WalletAddress from '../Wallet/address';\nimport { changeState } from '../../redux/modalShowSlice';\nimport { useAppDispatch } from '../../redux/hook';\nimport './index.css';\n\nconst ConnectButton = () => {\n    const { active, error } = useWeb3React();\n\n    const { logout } = useAuth();\n    const dispatch = useAppDispatch();\n\n    const address = WalletAddress();\n\n    return (\n        <>\n            <div\n                style={{\n                    display: 'grid',\n                    gridGap: '2vw',\n                    gridTemplateColumns: 'fit-content',\n                    maxWidth: '20vw',\n                    margin: 'auto',\n                }}\n            >\n                {active && (\n                    <Dropdown>\n                        <Dropdown.Toggle variant=\"flat\" id=\"dropdown-basic\">\n                            {address}\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            <Dropdown.Item>Wallet</Dropdown.Item>\n                            <Dropdown.Item>Transactions</Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Dropdown.Item onClick={logout}>Disconnect</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                )}\n                {!active && !error && (\n                    <Button\n                        variant=\"flat\"\n                        onClick={() => {\n                            dispatch(changeState());\n                        }}\n                    >\n                        Connect Wallet\n                    </Button>\n                )}\n            </div>\n\n            {!!error && <h4 style={{ marginTop: '1rem', marginBottom: '0' }}>{getErrorMessage(error)}</h4>}\n        </>\n    );\n};\n\nexport default ConnectButton;\n","export default __webpack_public_path__ + \"static/media/iris_banner_light.b423f6ce.svg\";","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Container';\nimport ConnectButton from '../ConnectButton';\nimport './index.css';\nimport iris_banner from '../../assets/iris_banner_light.svg';\n\n// expand=\"lg\" variant=\"dark\" sticky=\"top\"\nconst Header = () => {\n    return (\n        <>\n            <Navbar id=\"Nav\" sticky=\"top\" expand=\"lg\" variant=\"dark\">\n                <Container className=\"mx-3 my-1\" fluid>\n                    <Navbar.Brand href=\"/\" style={{ marginLeft: '1%' }}>\n                        <img src={iris_banner} width=\"90\" height=\"36\" alt=\"iRIS Fintech\" />\n                    </Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\n                        <Nav className=\"me-auto\">\n                            <Nav.Item style={{ marginLeft: '1%' }}>\n                                <Nav.Link style={{ color: 'rgb(230, 230, 250)' }} href=\"#home\">\n                                    HOME\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item style={{ marginLeft: '1%' }}>\n                                <Nav.Link style={{ color: 'rgb(230, 230, 250)' }} href=\"#story\">\n                                    STORY\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item style={{ marginLeft: '1%' }}>\n                                <Nav.Link style={{ color: 'rgb(230, 230, 250)' }} href=\"#roadmap\">\n                                    ROADMAP\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item style={{ marginLeft: '1%' }}>\n                                <Nav.Link style={{ color: 'rgb(230, 230, 250)' }} href=\"#team\">\n                                    TEAM\n                                </Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item style={{ marginLeft: '1%' }}>\n                                <Nav.Link style={{ color: 'rgb(230, 230, 250)' }} href=\"#contact\">\n                                    CONTACT\n                                </Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                        <Nav>\n                            <Nav.Item>\n                                <ConnectButton />\n                            </Nav.Item>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </>\n    );\n};\n\nexport default Header;\n"],"sourceRoot":""}