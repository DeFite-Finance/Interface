{"version":3,"sources":["components/Footer/Footer.tsx"],"names":["ETHBalance","useWeb3React","account","library","chainId","React","useState","ethbalance","setEthbalance","web3","Web3","ETHcoinABI","JSON","parse","stringify","require","ETHcontract","eth","Contract","useEffect","methods","balanceOf","call","then","balance","catch","NaN","undefined","id","BTCBalance","btcbalance","setBtcbalance","BitcoinABI","BTCcontract","Footer","className"],"mappings":"mybAMMA,EAAa,WACf,MAAsCC,cAA9BC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,QAC1B,EAAoCC,IAAMC,WAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAO,IAAIC,IAAK,yCAGhBC,EAAaC,KAAKC,MAAMD,KAAKE,UAAUC,EAAQ,OAC/CC,EAAc,IAAIP,EAAKQ,IAAIC,SAASP,EAF1B,8CA2BhB,OAxBAN,IAAMc,WAAU,WACZ,GAAMjB,GAAaC,EAAS,CAiBxB,OAdAa,EAAYI,QACPC,UAAUnB,GACVoB,OACAC,MAAK,SAACC,GAEChB,EAAcgB,MAGrBC,OAAM,WAECjB,EAAckB,QAInB,WACHlB,OAAcmB,OAGvB,CAACzB,EAASC,EAASC,EAASY,EAAYI,UAGvC,mCACI,oBAAGQ,GAAG,QAAN,kBAAmC,OAAfrB,EAAsB,QAAUA,EAAU,UAAMA,GAAe,SAKzFsB,EAAa,WACf,MAAsC5B,cAA9BC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,QAC1B,EAAoCC,IAAMC,WAA1C,mBAAOwB,EAAP,KAAmBC,EAAnB,KACMtB,EAAO,IAAIC,IAAK,yCAGhBsB,EAAapB,KAAKC,MAAMD,KAAKE,UAAUC,EAAQ,OAC/CkB,EAAc,IAAIxB,EAAKQ,IAAIC,SAASc,EAF1B,8CA2BhB,OAxBA3B,IAAMc,WAAU,WACZ,GAAMjB,GAAaC,EAAS,CAiBxB,OAdA8B,EAAYb,QACPC,UAAUnB,GACVoB,OACAC,MAAK,SAACC,GAECO,EAAcP,MAGrBC,OAAM,WAECM,EAAcL,QAInB,WACHK,OAAcJ,OAGvB,CAACzB,EAASC,EAASC,EAAS6B,EAAYb,UAGvC,mCACI,oBAAGQ,GAAG,QAAN,kBAAmC,OAAfE,EAAsB,QAAUA,EAAU,UAAMA,GAAe,SAwChFI,UAnCA,WACX,MAA6BjC,cAArBC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QACjB,OAAKD,GAAYC,EAcT,mCACI,qBAAKyB,GAAG,SAAR,SACI,sBAAKO,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,SACI,mBAAGP,GAAG,QAAN,gCAEJ,qBAAKO,UAAU,QAAf,SACI,cAACN,EAAD,MAEJ,qBAAKM,UAAU,QAAf,SACI,cAACnC,EAAD,aAtBhB,mCACI,qBAAK4B,GAAG,SAAR,SACI,qBAAKO,UAAU,MAAf,SACI,qBAAKA,UAAU,QAAf,SACI,mBAAGP,GAAG,QAAN","file":"static/js/8.b48c4fc9.chunk.js","sourcesContent":["import React from 'react';\n// import { Link, Redirect } from 'react-router-dom';\nimport { useWeb3React } from '@web3-react/core';\nimport Web3 from 'web3';\nimport './index.css';\n\nconst ETHBalance = () => {\n    const { account, library, chainId } = useWeb3React();\n    const [ethbalance, setEthbalance] = React.useState<number>();\n    const web3 = new Web3('https://bsc-dataseed1.binance.org:443');\n\n    const Address = '0x2170Ed0880ac9A755fd29B2688956BD959F933F8';\n    const ETHcoinABI = JSON.parse(JSON.stringify(require('./EthcoinABI.json')));\n    const ETHcontract = new web3.eth.Contract(ETHcoinABI, Address);\n    React.useEffect((): any => {\n        if (!!account && !!library) {\n            let stale = false;\n\n            ETHcontract.methods\n                .balanceOf(account)\n                .call()\n                .then((balance: any) => {\n                    if (!stale) {\n                        setEthbalance(balance);\n                    }\n                })\n                .catch(() => {\n                    if (!stale) {\n                        setEthbalance(NaN);\n                    }\n                });\n\n            return () => {\n                setEthbalance(undefined);\n            };\n        }\n    }, [account, library, chainId, ETHcontract.methods]);\n    // console.log(ethbalance);\n    return (\n        <>\n            <p id=\"title\">ETH: {ethbalance === null ? 'Error' : ethbalance ? `${ethbalance}` : ''}</p>\n        </>\n    );\n};\n\nconst BTCBalance = () => {\n    const { account, library, chainId } = useWeb3React();\n    const [btcbalance, setBtcbalance] = React.useState<number>();\n    const web3 = new Web3('https://bsc-dataseed1.binance.org:443');\n\n    const Address = '0x5aF03DbdD8273A81B9e713AF821D25e819d31894';\n    const BitcoinABI = JSON.parse(JSON.stringify(require('./BitcoinABI.json')));\n    const BTCcontract = new web3.eth.Contract(BitcoinABI, Address);\n    React.useEffect((): any => {\n        if (!!account && !!library) {\n            let stale = false;\n\n            BTCcontract.methods\n                .balanceOf(account)\n                .call()\n                .then((balance: any) => {\n                    if (!stale) {\n                        setBtcbalance(balance);\n                    }\n                })\n                .catch(() => {\n                    if (!stale) {\n                        setBtcbalance(NaN);\n                    }\n                });\n\n            return () => {\n                setBtcbalance(undefined);\n            };\n        }\n    }, [account, library, chainId, BTCcontract.methods]);\n    // console.log(btcbalance);\n    return (\n        <>\n            <p id=\"title\">BTC: {btcbalance === null ? 'Error' : btcbalance ? `${btcbalance}` : ''}</p>\n        </>\n    );\n};\n\nconst Footer = () => {\n    const { account, library } = useWeb3React();\n    if (!account || !library) {\n        return (\n            <>\n                <div id=\"footer\">\n                    <div className=\"row\">\n                        <div className=\"col-3\">\n                            <p id=\"title\">Welcome to Iris Fintech</p>\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    } else {\n        return (\n            <>\n                <div id=\"footer\">\n                    <div className=\"row\">\n                        <div className=\"col-3\">\n                            <p id=\"title\">Wallet Connected</p>\n                        </div>\n                        <div className=\"col-3\">\n                            <BTCBalance />\n                        </div>\n                        <div className=\"col-3\">\n                            <ETHBalance />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n};\n\nexport default Footer;\n"],"sourceRoot":""}