{"version":3,"sources":["redux/modalShowSlice.tsx","components/Wallet/address.tsx","utils/getEthErrorMessage.tsx","components/ConnectButton/index.tsx","components/Header/index.tsx"],"names":["modalShowSlice","createSlice","name","initialState","show","reducers","changeState","state","actions","WalletAddress","account","useWeb3React","substring","length","getErrorMessage","error","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","console","ConnectButton","active","dispatch","useAppDispatch","logout","useAuth","address","style","display","gridGap","gridTemplateColumns","maxWidth","margin","Dropdown","Toggle","variant","id","Menu","Item","Divider","onClick","Button","marginTop","marginBottom","Header","Navbar","bg","expand","sticky","Container","fluid","Brand","href","marginLeft","Collapse","Nav","className","Link"],"mappings":"2HAAA,8CAEaA,EAAiBC,YAAY,CACtCC,KAAM,YACNC,aAAc,CACVC,MAAM,GAEVC,SAAU,CACNC,YAAa,SAACC,GACVA,EAAMH,MAAOG,EAAMH,SAMhBE,EAAgBN,EAAeQ,QAA/BF,YAEAN,MAAf,S,iCCjBA,YAQeS,IANO,WAClB,IAAQC,EAAYC,cAAZD,QAER,OAAOA,EAAO,UAAMA,EAAQE,UAAU,EAAG,GAA3B,cAAmCF,EAAQE,UAAUF,EAAQG,OAAS,IAAO,K,iICEzFC,EAAkB,SAACC,GACrB,OAAIA,aAAiBC,IACV,8GAEPD,aAAiBE,IACV,+CAEPF,aAAiBG,KAAoCH,aAAiBI,IAC/D,kEAGXC,QAAQL,MAAMA,GACP,mE,kCCuCIM,EA9CO,WAClB,MAA0BV,cAAlBW,EAAR,EAAQA,OAAQP,EAAhB,EAAgBA,MAEVQ,EAAWC,cAETC,EAAWC,cAAXD,OAEFE,EAAUlB,cAEhB,OACI,qCACI,sBACImB,MAAO,CACHC,QAAS,OACTC,QAAS,OACTC,oBAAqB,cACrBC,SAAU,QACVC,OAAQ,QANhB,UASKX,GACG,eAACY,EAAA,EAAD,WACI,cAACA,EAAA,EAASC,OAAV,CAAiBC,QAAQ,UAAUC,GAAG,iBAAtC,SACKV,IAGL,eAACO,EAAA,EAASI,KAAV,WACI,cAACJ,EAAA,EAASK,KAAV,qBACA,cAACL,EAAA,EAASK,KAAV,2BACA,cAACL,EAAA,EAASM,QAAV,IACA,cAACN,EAAA,EAASK,KAAV,CAAeE,QAAShB,EAAxB,+BAIVH,IAAWP,GACT,cAAC2B,EAAA,EAAD,CAAQN,QAAQ,UAAUK,QAAS,kBAAMlB,EAASjB,gBAAlD,iCAMLS,GAAS,oBAAIa,MAAO,CAAEe,UAAW,OAAQC,aAAc,KAA9C,SAAsD9B,EAAgBC,SCd/E8B,UAjCA,WACX,OACI,mCACI,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAAKZ,QAAQ,OAAOa,OAAO,MAArD,SACI,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACI,cAACL,EAAA,EAAOM,MAAR,CAAcC,KAAK,IAAIzB,MAAO,CAAE0B,WAAY,MAA5C,0BAGA,cAACR,EAAA,EAAOX,OAAR,CAAe,gBAAc,0BAC7B,eAACW,EAAA,EAAOS,SAAR,CAAiBlB,GAAG,wBAApB,UACI,eAACmB,EAAA,EAAD,CAAKC,UAAU,UAAf,UACI,cAACD,EAAA,EAAIjB,KAAL,CAAUX,MAAO,CAAE0B,WAAY,MAA/B,SACI,cAACE,EAAA,EAAIE,KAAL,CAAUL,KAAK,QAAf,oBAEJ,cAACG,EAAA,EAAIjB,KAAL,CAAUX,MAAO,CAAE0B,WAAY,MAA/B,SACI,cAACE,EAAA,EAAIE,KAAL,CAAUL,KAAK,QAAf,oBAEJ,cAACG,EAAA,EAAIjB,KAAL,CAAUX,MAAO,CAAE0B,WAAY,MAA/B,SACI,cAACE,EAAA,EAAIE,KAAL,CAAUL,KAAK,WAAf,0BAGR,cAACG,EAAA,EAAD,UACI,cAACA,EAAA,EAAIjB,KAAL,UACI,cAAC,EAAD","file":"static/js/13.5755bf0d.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const modalShowSlice = createSlice({\n    name: 'modalShow',\n    initialState: {\n        show: false,\n    },\n    reducers: {\n        changeState: (state) => {\n            state.show = state.show ? false : true;\n        },\n    },\n});\n\n// Action creators are generated for each case reducer function\nexport const { changeState } = modalShowSlice.actions;\n\nexport default modalShowSlice.reducer;\n","import { useWeb3React } from '@web3-react/core';\n\nconst WalletAddress = () => {\n    const { account } = useWeb3React();\n\n    return account ? `${account.substring(0, 6)}...${account.substring(account.length - 4)}` : '';\n};\n\nexport default WalletAddress;\n","import {\n    NoEthereumProviderError,\n    UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector';\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from '@web3-react/walletconnect-connector';\nimport { UnsupportedChainIdError } from '@web3-react/core';\n\nconst getErrorMessage = (error: Error) => {\n    if (error instanceof NoEthereumProviderError) {\n        return 'No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.';\n    }\n    if (error instanceof UnsupportedChainIdError) {\n        return 'You are connected to an unsupported network.';\n    }\n    if (error instanceof UserRejectedRequestErrorInjected || error instanceof UserRejectedRequestErrorWalletConnect) {\n        return 'Please authorize this website to access your Ethereum account.';\n    }\n\n    console.error(error);\n    return 'An unknown error occurred. Check the console for more details.';\n};\n\nexport { getErrorMessage };\n","import React from 'react';\nimport { useWeb3React } from '@web3-react/core';\nimport Button from 'react-bootstrap/Button';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nimport { changeState } from '../../redux/modalShowSlice';\nimport { getErrorMessage } from '../../utils/getEthErrorMessage';\nimport { useAppDispatch } from '../../redux/hook';\nimport useAuth from '../../hooks/useAuth';\n\nimport WalletAddress from '../Wallet/address';\n\nconst ConnectButton = () => {\n    const { active, error } = useWeb3React();\n\n    const dispatch = useAppDispatch();\n\n    const { logout } = useAuth();\n\n    const address = WalletAddress();\n\n    return (\n        <>\n            <div\n                style={{\n                    display: 'grid',\n                    gridGap: '1rem',\n                    gridTemplateColumns: 'fit-content',\n                    maxWidth: '20rem',\n                    margin: 'auto',\n                }}\n            >\n                {active && (\n                    <Dropdown>\n                        <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\n                            {address}\n                        </Dropdown.Toggle>\n\n                        <Dropdown.Menu>\n                            <Dropdown.Item>Wallet</Dropdown.Item>\n                            <Dropdown.Item>Transactions</Dropdown.Item>\n                            <Dropdown.Divider />\n                            <Dropdown.Item onClick={logout}>Disconnect</Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                )}\n                {!active && !error && (\n                    <Button variant=\"primary\" onClick={() => dispatch(changeState())}>\n                        Connect Wallet\n                    </Button>\n                )}\n            </div>\n\n            {!!error && <h4 style={{ marginTop: '1rem', marginBottom: '0' }}>{getErrorMessage(error)}</h4>}\n        </>\n    );\n};\n\nexport default ConnectButton;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Container';\nimport ConnectButton from '../ConnectButton';\n\nconst Header = () => {\n    return (\n        <>\n            <Navbar bg=\"black\" expand=\"lg\" variant=\"dark\" sticky=\"top\">\n                <Container fluid>\n                    <Navbar.Brand href=\"/\" style={{ marginLeft: '1%' }}>\n                        Iris Fintech\n                    </Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\n                        <Nav className=\"me-auto\">\n                            <Nav.Item style={{ marginLeft: '1%' }}>\n                                <Nav.Link href=\"/home\">Home</Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item style={{ marginLeft: '1%' }}>\n                                <Nav.Link href=\"/swap\">Swap</Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item style={{ marginLeft: '1%' }}>\n                                <Nav.Link href=\"/lending\">Lending</Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                        <Nav>\n                            <Nav.Item>\n                                <ConnectButton />\n                            </Nav.Item>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </>\n    );\n};\n\nexport default Header;\n"],"sourceRoot":""}